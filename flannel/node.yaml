#cloud-config

---
write_files:
- path: /opt/bin/wait4ectd.sh
  owner: root
  content: |
    #! /usr/bin/bash
    until curl http://__MASTER_IP__:4001/v2/machines; do sleep 2; done
coreos:
  fleet:
    etcd-servers: http://$private_ipv4:4001
    public-ip: $private_ipv4
    metadata: "role=flannel-node"
  units:
    - name: wait4etcd.service
      command: start
      content: |
        [Unit]
        Description=Wait for etcd to come up
        Wants=network-online.target
        After=network-online.target
        Before=etcd.service
        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/wait4ectd.sh
        ExecStart=/usr/bin/bash /opt/bin/wait4ectd.sh
        RemainAfterExit=true
        Type=oneshot  
    - name: etcd.service
      command: start
      content: |
        Description=etcd 2.0 proxy service
        Before=fleet.service
        After=wait4etcd.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=0
        SyslogIdentifier=writer_process
        ExecStartPre=/usr/bin/docker pull quay.io/coreos/etcd:__ETCD_VERSION__
        ExecStart=/bin/bash -c "/usr/bin/docker run \
          -p 4001:4001 \
          -p 2380:2380 \
          -p 2379:2379 \
          --name etcd \
          quay.io/coreos/etcd:__ETCD_VERSION__ \
          -proxy on \
          -listen-client-urls http://0.0.0.0:4001 \
          -initial-cluster master=http://__MASTER_IP__:2380"
        ExecStop=/usr/bin/docker kill etcd-proxy
        Restart=always
        RestartSec=10
    - name: fleet.service
      command: start
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target
        Before=fleet.service

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/k8s/setup-network-environment 
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: fleet.service
      command: start
    - name: flanneld.service
      command: start
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Unit]
            Requires=fleet.service
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.244.0.0/16", "Backend": {"Type": "vxlan"}}'      
  update:
    group: alpha
    reboot-strategy: __REBOOT_STRAT__