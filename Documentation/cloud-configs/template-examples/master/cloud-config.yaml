#cloud-config

---
write_files:
  - path: /etc/kubernetes/manifests/kube-system-namespace.yaml
    owner: root
    permissions: 0644
    encoding: "gz+b64"
    content: |
      {KUBE_SYSTEM_NAMESPACE_YAML_OUTPUT}
  - path: /etc/kubernetes/manifests/apiserver.yaml
    owner: root
    permissions: 0644
    encoding: "gz+b64"
    content: |
      {APISERVER_YAML_OUTPUT}
  - path: /etc/kubernetes/manifests/podmaster.yaml
    owner: root
    permissions: 0644
    encoding: "gz+b64"
    content: |
      {PODMASTER_YAML_OUTPUT}
  - path: /etc/kubernetes/manifests/kube-proxy.yaml
    owner: root
    permissions: 0644
    encoding: "gz+b64"
    content: |
      {KUBE_PROXY_YAML_OUTPUT}
  - path: /etc/ssl/ca-key.pem
    owner: root
    permissions: 0644
    encoding: "gz+b64"
    content: |
      {CA_KEY_OUTPUT}
  - path: /etc/ssl/ca.pem
    owner: root
    permissions: 0644
    encoding: "gz+b64"
    content: |
      {CA_OUTPUT}
coreos:
  units:
    - name: etcd-kraken.service
      command: start
      content: |
        [Unit]
        Description=etcd
        After=docker.service
        After=ssl.service
        [Service]
        TimeoutStartSec=0
        KillMode=none
        ExecStartPre=-/usr/bin/docker kill etcd
        ExecStartPre=-/usr/bin/docker rm etcd
        ExecStart=docker run -v /etc/etcd/:/etc/etcd \
         -p 2379:2379 -p 2380:2380 \
         --name etcd quay.io/coreos/etcd:{ETCD_VERSION} \
         --proxy on --discovery-srv {ETCD_DNS_ENTRY}
        ExecStartStop=/usr/bin/docker stop etcd
    - name: setup-network-environment.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target
        [Service]
        ExecStart=/opt/bin/setup-network-environment.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: kubelet.service
      command: start
      content: |
        [Unit]
        After=k8s-init.service
        Requires=k8s-init.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/{KUBERNETES_VERSION}/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStart=/opt/bin/kubelet \
          --api_servers={KUBERNETES_API_ENDPOINT} \
          --register-node=true \
          --allow-privileged=true \
          --config=/etc/kubernetes/manifests \
          --hostname-override=$private_ipv4 \
          --cluster-dns=10.100.0.10 \
          --cluster-domain=cluster.local \
          --kubeconfig=/etc/kubernetes/manifests/kube-config.yaml \
          --tls-cert-file=/etc/kubernetes/ssl/worker.pem \
          --tls-private-key-file=/etc/kubernetes/ssl/worker-key.pem \
          --network-plugin=cni \
          --network-plugin-dir=/etc/cni/net.d \
          --cloud-provider=aws \
          --logtostderr=true
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=multi-user.target
  update:
    group: stable
    reboot-strategy: best-effort


