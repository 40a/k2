---
- name: Collect all services
  command: >
    kubectl --kubeconfig={{ kubeconfig }} get services --all-namespaces -o json
  register: added_services
  when: kraken_action == 'down'
  ignore_errors: yes

- name: Register services fact
  set_fact:
    added_services_map: "{{ added_services.stdout|from_json }}"
  when: kraken_action == 'down'
  ignore_errors: yes

- name: Set services info
  set_fact:
    the_services: "{{ added_services_map.items()[0][1] }}"
  when: kraken_action == 'down'
  ignore_errors: yes

- name: Clean up services
  command: >
    kubectl --kubeconfig={{ kubeconfig }} delete --namespace {{ item.metadata.namespace }} svc {{ item.metadata.name }}
  with_items: "{{ the_services }}"
  ignore_errors: yes
  when: item.status.loadBalancer.ingress[0].hostname is defined and kraken_action == 'down'

- name: Pauase to let services come down
  pause: minutes=5
  when: kraken_action == 'down'

- name: Clean up releases
  command: >
    helm delete --purge {{ item.name }}
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  with_items: "{{cluster_services}}"
  ignore_errors: yes
  when: tiller_present|success

- name: Clean up tiller if present
  command: >
    kubectl --kubeconfig={{ kubeconfig }} delete deployment {{ tiller }} --namespace=kube-system
  when: tiller_present|success

- name: Delete all service namespaces
  command: >
    kubectl --kubeconfig={{ kubeconfig }} delete namespace {{ item }}
  with_items: "{{ cluster_namespaces }}"
  when: cluster_namespaces is defined
  ignore_errors: yes
