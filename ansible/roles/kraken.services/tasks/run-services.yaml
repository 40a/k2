---
- name: Create Helm home
  file: >
    path={{ helm_home }}
    state=directory

- name: Set cluster services fact
  set_fact:
    cluster_services: "{{ kraken_config.clusterServices.services | default([]) }}" 
- name: Set cluster repos fact
  set_fact:
    cluster_repos: "{{ kraken_config.clusterServices.repos | default([]) }}" 
- name: Set cluster namespaces fact
  set_fact:
    cluster_namespaces: "{{ kraken_config.clusterServices.namespaces | default([]) }}" 

- name: See if tiller rc if present
  shell: >
    kubectl --kubeconfig={{ kubeconfig }} get rc {{ tiller_rc }}
  register: tiller_present
  ignore_errors: yes

- name: Clean up releases
  command: >
    helm delete --purge {{ item.name }}
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  with_items: "{{cluster_services}}"
  ignore_errors: yes
  when: tiller_present|success

- name: Clean up tiller rc if present
  command: >
    kubectl --kubeconfig={{ kubeconfig }} delete rc {{ tiller_rc }}
  when: tiller_present|success

- name: Delete all service namespaces
  command: >
    kubectl --kubeconfig={{ kubeconfig }} delete namespace {{ item }}
  with_items: "{{ cluster_namespaces }}"
  when: cluster_namespaces is defined
  ignore_errors: yes

- name: Create all service namespaces
  command: >
    kubectl --kubeconfig={{ kubeconfig | expanduser }} create namespace {{ item }}
  with_items: "{{ cluster_namespaces }}"
  when: cluster_namespaces is defined

- name: Init helm
  command: >
    helm init
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"

- name: Give tiller rc a chance to fully init
  pause: seconds=5

- name: Remove helm repositories
  command: >
    helm repo remove {{ item.name }}
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  with_items: "{{ cluster_repos }}"
  when: cluster_repos is defined
  ignore_errors: yes

- name: Add helm repositories
  command: >
    helm repo add {{ item.name }} {{ item.url }}
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  with_items: "{{ cluster_repos }}"
  when: cluster_repos is defined

- name: Save all config values to files
  template: src=service-values.yaml.jinja2
    dest="{{ config_base | expanduser }}/{{kraken_config.cluster}}/{{ item.repo }}-{{ item.name }}.helmvalues"
  with_items: "{{ cluster_services }}"
  when: cluster_services is defined

- name: Install charts
  command: >
    helm install {{ item.repo }}/{{ item.chart }}
      --name {{ item.name }}
      --values {{ config_base | expanduser }}/{{kraken_config.cluster}}/{{ item.repo }}-{{ item.name }}.helmvalues
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  with_items: "{{ cluster_services }}"
  when: cluster_services is defined