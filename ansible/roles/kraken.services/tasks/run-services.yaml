---
- name: Create all service namespaces
  command: >
    kubectl --kubeconfig={{ kubeconfig | expanduser }} create namespace {{ item }}
  with_items: "{{ cluster_namespaces }}"
  when: cluster_namespaces is defined

- name: create helm command string
  set_fact: 
    helm_command: "helm --debug"
  when: (kraken_config.clusterServices.debug is defined) and (kraken_config.clusterServices.debug == True) 

- name: create helm command string
  set_fact: 
    helm_command: "helm"
  when: (kraken_config.clusterServices.debug is undefined) or (kraken_config.clusterServices.debug != True) 

- name: Init helm with default tiller
  command: >
    {{helm_command}} init
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  when: (tiller_image is undefined) or (tiller_image is none) or (tiller_image|trim == '')

- name: Init helm with overriden tiller
  command: >
    {{helm_command}} init --tiller-image {{ tiller_image }}
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  when: (tiller_image is defined) and (tiller_image is not none) and (tiller_image|trim != '')

- name: Give tiller rc a chance to fully init
  pause: seconds=15

- name: Remove helm repositories
  command: >
    {{helm_command}} repo remove {{ item.name }}
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  with_items: "{{ cluster_repos }}"
  when: cluster_repos is defined
  ignore_errors: yes

- name: Add helm repositories
  command: >
    {{helm_command}} repo add {{ item.name }} {{ item.url }}
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  with_items: "{{ cluster_repos }}"
  when: cluster_repos is defined

- name: Save all config values to files
  template: src=service-values.yaml.jinja2
    dest="{{ config_base | expanduser }}/{{kraken_config.cluster}}/{{ item.repo }}-{{ item.name }}.helmvalues"
  with_items: "{{ cluster_services }}"
  when: cluster_services is defined

- name: Install charts
  command: >
    {{helm_command}} install {{ item.repo }}/{{ item.chart }}
      --name {{ item.name }}
      --version {{ item.version }}
      --namespace {{ item.namespace | default('default') }}
      --values {{ config_base | expanduser }}/{{kraken_config.cluster}}/{{ item.repo }}-{{ item.name }}.helmvalues
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
    HELM_HOME: "{{ helm_home }}"
  with_items: "{{ cluster_services }}"
  when: cluster_services is defined