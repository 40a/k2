---
- name: Gather inventory of etcds
  ec2_remote_facts:
    region: "{{kraken_config.providerConfig.region}}"
    aws_access_key: "{{kraken_config.providerConfig.authentication.accessKey}}"
    aws_secret_key: "{{kraken_config.providerConfig.authentication.accessSecret}}"
    filters:
      instance-state-name: running
      "tag:k2-inventory": "true"
      "tag:k2-inventory-type": "etcd"
  register: ec2_results_etcd

- name: Gather inventory of masters
  ec2_remote_facts:
    region: "{{kraken_config.providerConfig.region}}"
    aws_access_key: "{{kraken_config.providerConfig.authentication.accessKey}}"
    aws_secret_key: "{{kraken_config.providerConfig.authentication.accessSecret}}"
    filters:
      instance-state-name: running
      "tag:k2-inventory": "true"
      "tag:k2-inventory-type": "master"
  register: ec2_results_master

- name: Gather inventory of masters lbs
  ec2_remote_facts:
    region: "{{kraken_config.providerConfig.region}}"
    aws_access_key: "{{kraken_config.providerConfig.authentication.accessKey}}"
    aws_secret_key: "{{kraken_config.providerConfig.authentication.accessSecret}}"
    filters:
      instance-state-name: running
      "tag:k2-inventory": "true"
      "tag:k2-inventory-type": "master-loadbalancer"
  register: ec2_results_masterlb
  when: kraken_config.master.loadbalancer != 'cloud'

- name: Gather inventory of nodes
  ec2_remote_facts:
    region: "{{kraken_config.providerConfig.region}}"
    aws_access_key: "{{kraken_config.providerConfig.authentication.accessKey}}"
    aws_secret_key: "{{kraken_config.providerConfig.authentication.accessSecret}}"
    filters:
      instance-state-name: running
      "tag:k2-inventory": "true"
      "tag:k2-inventory-type": "master"
  register: ec2_results_node

- name: Generate ssh inventory
  template: src=ssh_config.jinja2
    dest="{{ config_base | expanduser }}/{{kraken_config.cluster}}/ssh_config"