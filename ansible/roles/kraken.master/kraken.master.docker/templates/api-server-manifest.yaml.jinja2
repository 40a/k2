---
apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: gcr.io/google_containers/hyperkube:{{kraken_config.master.nodepool.kubeConfig.version}}
    command:
    - /hyperkube
    - apiserver
    - --etcd-servers=127.0.0.1:{{kraken_config.master.nodepool.kubeConfig.clusterEtcd.etcd.clientPorts[0]}}
{% if kraken_config.master.nodepool.kubeConfig.eventsEtcd is defined %}
    - --etcd-servers-overrides=/events#{{kraken_config.master.nodepool.kubeConfig.eventsEtcd.etcd.clientPorts[0]}}
{% endif %}
    - --etcd-cafile=/etc/ca.pem
    - --etcd-certfile=/etc/etcd/ssl/client.pem
    - --etcd-keyfile=/etc/etcd/ssl/client-key.pem
    - --allow-privileged=true
    - --service-cluster-ip-range={{kraken_config.network}}
    - --secure_port=443
    - --admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
    - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem
    - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --client-ca-file=/etc/ssl/ca.pem
    - --service-account-key-file=/etc/ssl/service-account.pem
    - --cloud-provider={{kraken_kubernetes_cloudprovider}}
    - --logtostderr=true
    ports:
    - containerPort: 443
      hostPort: 443
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/etcd/ssl
      name: ssl-certs-etcd
      readOnly: true
    - mountPath: /etc/ssl
      name: ssl-certs-host
      readOnly: true
  volumes:
  - hostPath:
      path: /opt/kraken/kubernetes/ssl
    name: ssl-certs-kubernetes
  - hostPath:
      path: /opt/kraken/etcd/ssl
    name: ssl-certs-etcd
  - hostPath:
      path: /opt/kraken
    name: ssl-certs-host