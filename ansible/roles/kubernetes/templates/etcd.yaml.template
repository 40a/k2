#cloud-config

---
coreos:
  etcd2:
    name: etcd
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    initial-cluster: etcd=http://{{etcd_private_ip}}:2380
    initial-advertise-peer-urls: http://{{etcd_private_ip}}:2380
    listen-peer-urls: http://{{etcd_private_ip}}:2380,http://{{etcd_private_ip}}:7001
    advertise-client-urls: http://{{etcd_private_ip}}:2379,http://{{etcd_private_ip}}:4001
    initial-cluster-state: new
  fleet:
    etcd-servers: http://0.0.0.0:4001
    public-ip: {{etcd_private_ip}}
    metadata: "role=etcd"
  units:
{% if format_docker_storage_mnt %}
    - name: format-ebs.service
      command: start
      content: |
        [Unit]
        Description=Formats the EBS drive
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/sbin/wipefs -f {{format_docker_storage_mnt}}
        ExecStart=/usr/sbin/mkfs.ext4 -F {{format_docker_storage_mnt}}
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=Mount EBS to /var/lib/docker
        Requires=format-ebs.service
        After=format-ebs.service
        Before=docker.service
        [Mount]
        What=/dev/xvdf
        Where=/var/lib/docker
        Type=ext4
{% endif %}
    - name: fleet.service
      command: start
    - name: systemd-journal-gatewayd.socket
      command: start
      enable: yes
      content: |
        [Unit] 
        Description=Journal Gateway Service Socket
        [Socket] 
        ListenStream=/var/run/journald.sock
        Service=systemd-journal-gatewayd.service
        [Install] 
        WantedBy=sockets.target
{% if logentries_token %}
    - name: logentries-token.service
      command: start
      content: |
        [Unit]
        Description=sets a logentries token in etcd
        After=etcd2.service
        Before=journal-2-logentries.service

        [Service]
        ExecStart=/usr/bin/etcdctl set /logentries.com/token {{logentries_token}}
        RemainAfterExit=true
        Type=oneshot
    - name: logentries-url.service
      command: start
      content: |
        [Unit]
        Description=sets a logentries url in etcd
        After=etcd2.service
        Before=journal-2-logentries.service

        [Service]
        ExecStart=/usr/bin/etcdctl set /logentries.com/url {{logentries_url}}
        RemainAfterExit=true
        Type=oneshot
    - name: journal-2-logentries.service
      command: start
      content: |
        [Unit]
        Description=Forward Systemd Journal to logentries.com
        After=docker.service
        Requires=docker.service
        [Service]
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill journal-2-logentries
        ExecStartPre=-/usr/bin/docker rm journal-2-logentries
        ExecStartPre=/usr/bin/docker pull quay.io/kelseyhightower/journal-2-logentries
        ExecStart=/usr/bin/bash -c \
        "/usr/bin/docker run --name journal-2-logentries \
        -v /run/journald.sock:/run/journald.sock \
        -e LOGENTRIES_TOKEN=`etcdctl get /logentries.com/token` \
        -e LOGENTRIES_URL=`etcdctl get /logentries.com/url` \
        quay.io/kelseyhightower/journal-2-logentries"
{% endif %}
  update:
    group: {{update_group}}
    reboot-strategy: {{reboot_strategy}}