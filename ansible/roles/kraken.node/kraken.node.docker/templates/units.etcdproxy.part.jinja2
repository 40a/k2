- name: etcd-proxy.service
  command: start
  content: |
    [Unit]
    Description=etcd proxy
{% if item.nodepool.kubeConfig.clusterEtcd.etcd.ssl == true %}
    After=kraken-etcd-ssl.service
    Requires=kraken-etcd-ssl.service
{% else %}
    After=setup-network-environment.service
    Requires=setup-network-environment.service
{% endif %}
    [Service]
    TimeoutStartSec=0
    KillMode=none
    ExecStartPre=-/usr/bin/docker kill etcdproxy
    ExecStartPre=-/usr/bin/docker rm etcdproxy
    ExecStart=docker run {% for port in item.nodepool.kubeConfig.clusterEtcd.etcd.clientPorts %}-p {{port}}:{{port}} {% endfor %}{% for port in item.nodepool.kubeConfig.clusterEtcd.etcd.peerPorts %}-p {{port}}:{{port}} {% endfor %} \
      {% if item.nodepool.kubeConfig.clusterEtcd.etcd.ssl == true %}-v /opt/kraken:/etc{% endif %}
      --name etcdproxy quay.io/coreos/etcd:{{item.nodepool.kubeConfig.clusterEtcd.etcd.version}} \
      --proxy on \
      --discovery-srv {{item.nodepool.kubeConfig.clusterEtcd.etcd.name}}.{{kraken_config.cluster}}.internal \
{% if item.nodepool.kubeConfig.clusterEtcd.etcd.ssl == true %}
      --peer-trusted-ca-file=/etc/ca.pem \
      --peer-cert-file=/etc/etcd/ssl/server.pem \
      --peer-key-file=/etc/etcd/ssl/server-key.pem \
{% endif %}
    ExecStartStop=/usr/bin/docker stop etcdproxy