{% if item.containerConfig.runtime == 'docker' %}
- name: etcd2.service
  command: start
  content: |
    [Unit]
    Description=etcd2
    After=docker.service
    After=networking.service
{% for mount in item.nodepool.mounts %}
    After={{mount.device | mapdevice}}.mount
{% endfor %}
    [Service]
    EnvironmentFile=/etc/networking.env
    TimeoutStartSec=0
    KillMode=none
    ExecStartPre=-/usr/bin/docker kill etcd_{{item.nodepool.name}}
    ExecStartPre=-/usr/bin/docker rm etcd_{{item.nodepool.name}}
    ExecStartPre=/usr/bin/mkdir -p /var/lib/etcd2
    ExecStart=docker run -v /var/lib/etcd2:/ephemeral \ 
     {% for port in item.clientPorts %}-p {{port}}:{{port}}{% endfor %} {% for port in item.peerPorts %}-p {{port}}:{{port}}{% endfor %} \
     --name etcd_{{item.nodepool.name}} quay.io/coreos/etcd:etcd_{{item.version}} \
     --data-dir /ephemeral
     --name etcd2 \
{% if item.ssl == true %}
     --peer-client-cert-auth \
     --peer-trusted-ca-file=/etc/ssl/etcd/ca.crt \
     --peer-cert-file=/etc/ssl/etcd/client.crt \
     --peer-key-file=/etc/ssl/etcd/client.key \
{% endif %}
     --discovery-srv {{kraken_config.cluster}}.internal \
     --initial-advertise-peer-urls {% if item.ssl == true %}https{% else %}http{% endif %}://$private_ip:2382 \
     --initial-cluster-token {{item.clusterToken}} \
     --initial-cluster-state new \
     --advertise-client-urls {% if item.ssl == true %}https{% else %}http{% endif %}://$private_ip:2381 \
     --listen-client-urls {% if item.ssl == true %}https{% else %}http{% endif %}://$private_ip:2381 \
     --listen-peer-urls {% if item.ssl == true %}https{% else %}http{% endif %}://$private_ip:2382
    ExecStartStop=/usr/bin/docker stop etcd_{{item.nodepool.name}}
{% endif %}