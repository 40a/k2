- name: kraken-etcd.service
  command: start
  content: |
    [Unit]
    Description=etcd{{item.name}}
{% if item.ssl == true %}
    After=kraken-ssl.service
    Requires=kraken-ssl.service
{% endif %}
{% for mount in item.nodepool.mounts %}
    After={{mount.path | replace('/', '-') | replace('-', '', 1)}}.mount
    Requires={{mount.path | replace('/', '-') | replace('-', '', 1)}}.mount
{% endfor %}
    After=kraken-networking.service
    Requires=kraken-networking.service
    [Service]
    EnvironmentFile=/etc/network-environment
    TimeoutStartSec=0
    RestartSec=15
    Restart=always
    KillMode=none
    ExecStartPre=/usr/bin/mkdir -p /ephemeral/etcd
    ExecStart=/usr/bin/rkt run --net=host \
     --stage1-path=/usr/lib/rkt/stage1-images/stage1-fly.aci \
     --insecure-options=image \
     --inherit-env=true \
{% if item.ssl == true %}
     --volume ssl,kind=host,source=/etc/etcd/ssl,readOnly=true \
{% endif %}
     --volume data,kind=host,source=/ephemeral/etcd,readOnly=false \
     --volume resolv-conf,kind=host,source=/etc/resolv.conf \
     --mount volume=ssl,target=/etc/etcd/ssl \
     --mount volume=data,target=/ephemeral \
     --mount volume=resolv-conf,target=/etc/resolv.conf \
     quay.io/coreos/etcd:{{item.version}} \
     -- --data-dir /ephemeral/etcd \
     --name etcd{{item.name}} \
{% if item.ssl == true %}
     --peer-client-cert-auth \
     --peer-trusted-ca-file=/etc/etcd/ssl/peer-ca.pem \
     --peer-cert-file=/etc/etcd/ssl/peer.pem \
     --peer-key-file=/etc/etcd/ssl/peer-key.pem \
     --trusted-ca-file=/etc/etcd/ssl/server-ca.pem \
     --cert-file=/etc/etcd/ssl/server.pem \
     --key-file=/etc/etcd/ssl/server-key.pem \
     --client-cert-auth \
{% endif %}
     --discovery-srv {{item.name}}.{{kraken_config.cluster}}.internal \
     --initial-advertise-peer-urls {% if item.ssl == true %}https{% else %}http{% endif %}://${DEFAULT_IPV4}:{{item.peerPorts[0]}} \
     --initial-cluster-token {{item.clusterToken}} \
     --initial-cluster-state new \
     --advertise-client-urls {% for port in item.clientPorts %}{% if loop.index > 1 %},{% endif %}{% if item.ssl == true %}https{% else %}http{% endif %}://${DEFAULT_IPV4}:{{port}}{% endfor %} \
     --listen-client-urls {% for port in item.clientPorts %}{% if loop.index > 1 %},{% endif %}{% if item.ssl == true %}https{% else %}http{% endif %}://127.0.0.1:{{port}},{% if item.ssl == true %}https{% else %}http{% endif %}://${DEFAULT_IPV4}:{{port}}{% endfor %} \
     --listen-peer-urls {% for port in item.peerPorts %}{% if loop.index > 1 %},{% endif %}{% if item.ssl == true %}https{% else %}http{% endif %}://${DEFAULT_IPV4}:{{port}}{% endfor %} \
     ---
    ExecStopPost=/usr/bin/rkt gc --mark-only