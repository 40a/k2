#!/usr/bin/env ruby
# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'tempfile'

ENV_FILE = ENV['VAGRANT_ENV_FILE'] || File.join(File.dirname(__FILE__), "aws_exports")
VAGRANT_FILE = File.join(File.dirname(__FILE__), "Vagrantfile")
KUBECONFIG = File.join(File.dirname(__FILE__), ".kubeconfig")
KUBECONFIG_TMPL = File.join(File.dirname(__FILE__), "../../templates/kubeconfig.tmpl")
MASTER_IPS = ENV['MASTER_PUBLIC_IP']

# Find the number of nodes to launch and build array of node names
vms = [ 'etcd', 'master']
pattern = File.foreach(VAGRANT_FILE, "r").grep /NUM_NODES\s/
num_nodes = pattern[0].split("\n")[1].split(" = ")[1].to_i
(1..num_nodes).each do |i|
  vms.push("node-%02d" % i)
end

# Source AWS environment information
if ENV['AWS_ACCESS_KEY_ID']
	puts "Environment information found in profile"
elsif File.exist?(ENV_FILE)
	puts "Loading environment file"
	system "source #{ENV_FILE}"
else
	abort "No environment file found"
end

# Vagrant up the cluster
while vms.length > 8 do
	work_nodes = vms.shift(8).join(" ")
	system "vagrant up #{work_nodes}"
	sleep 15
end

if vms.length > 0
	system "vagrant up #{vms.join(' ')}"
end 

# Create .kubeconfig file
kubeconfig_file = File.new(KUBECONFIG, "w")
kubeconfig_tmpl = KUBECONFIG_TMPL
replacements = {
	'$MASTER_IP' => MASTER_IPS
}

regexp = Regexp.new replacements.keys.map {|k| Regexp.quote(k) }.join('|')

File.foreach(kubeconfig_tmpl, "r") do |line|
	kubeconfig_file.write line.gsub regexp, replacements
end

kubeconfig_file.close
