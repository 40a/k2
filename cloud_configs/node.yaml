#cloud-config

---
write_files:
- path: /opt/bin/wait4etcd.sh
  owner: root
  content: |
    #! /usr/bin/bash
    until curl http://$ETCD_IP:4001/v2/machines; do sleep 2; done
- path: /opt/bin/wait4etcdproxy.sh
  owner: root
  content: |
    #! /usr/bin/bash
    until curl http://127.0.0.1:4001/v2/machines; do sleep 2; done
- path: /opt/bin/wait4apiserver.sh
  owner: root
  content: |
    #! /usr/bin/bash
    until curl http://$MASTER_IP:8080; do sleep 2; done
coreos:
  etcd2:
    proxy: on
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    advertise-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    initial-cluster: etcd=http://$ETCD_IP:2380
  fleet:
    etcd-servers: http://$private_ipv4:4001
    public-ip: $private_ipv4
    metadata: "role=node"
  flannel:
    etcd-endpoints: http://$ETCD_IP:4001
    interface: $private_ipv4
  units:
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=0.0.0.0:4243
        BindIPv6Only=both
        Service=docker.service

        [Install]
        WantedBy=sockets.target
    - name: wait4etcd.service
      command: start
      content: |
        [Unit]
        Description=Wait for etcd to come up
        Wants=network-online.target
        After=network-online.target
        Before=flannel.service
        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/wait4etcd.sh
        ExecStart=/usr/bin/bash /opt/bin/wait4etcd.sh
        RemainAfterExit=true
        Type=oneshot
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target
        Before=flanneld.service

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://github.com/kelseyhightower/setup-network-environment/releases/download/v1.0.0/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: flanneld.service
      command: start
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Unit]
            Requires=wait4etcd.service
            After=wait4etcd.service
            Before=docker.service
    - name: docker.service
      drop-ins:
        - name: 51-docker-flannel.conf
          content: |
            [Unit]
            # startup, otherwise containers won't land in flannel's network...
            Requires=flanneld.service
            After=flanneld.service

            [Service]
            Environment=DOCKER_OPTS='--registry-mirror=http://$DOCKER_CACHE:5000'
    - name: wait4etcdproxy.service
      command: start
      content: |
        [Unit]
        Description=Wait for etcd proxy to come up
        Wants=etcd2.service
        After=etcd2.service

        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/wait4etcdproxy.sh
        ExecStart=/usr/bin/bash /opt/bin/wait4etcdproxy.sh
        RemainAfterExit=true
        Type=oneshot
    - name: fleet.service
      command: start
    - name: wait4apiserver.service
      command: start
      content: |
        [Unit]
        Description=Wait for etcd proxy to come up
        Wants=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/wait4apiserver.sh
        ExecStart=/usr/bin/bash /opt/bin/wait4apiserver.sh
        RemainAfterExit=true
        Type=oneshot
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=wait4apiserver.service
        After=wait4apiserver.service

        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/$KUBERNETES_VERSION/bin/linux/amd64/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
        ExecStart=/opt/bin/kube-proxy \
        --master=$MASTER_IP:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=wait4apiserver.service
        After=wait4apiserver.service

        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/$KUBERNETES_VERSION/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStart=/opt/bin/kubelet \
        --address=0.0.0.0 \
        --enable_server=true \
        --port=10250 \
        --read_only_port=10255 \
        --hostname_override=$private_ipv4 \
        --api_servers=$MASTER_IP:8080 \
        --cluster_dns=10.100.0.10 \
        --cluster_domain=$DNS_DOMAIN \
        --healthz_bind_address=0.0.0.0 \
        --healthz_port=10254 \
        --cadvisor_port=4194 \
        --log_cadvisor_usage=true \
        --logtostderr=true
        Restart=always
        RestartSec=10
  update:
    group: alpha
    reboot-strategy: $REBOOT_STRATEGY
