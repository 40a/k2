#cloud-config

---
write_files:
- path: /opt/bin/wait4etcdproxy.sh
  owner: root
  content: |
    #! /usr/bin/bash
    until curl http://127.0.0.1:4001/v2/machines; do sleep 2; done
coreos:
  ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC+ORTPzSHSlzoGd7tJzNc5XdVAu6sv1lxe5830OqO+Y2FkUZQrzjov5azCTKHxVTC+UZsyYPRjk/qTHwMiFVdS2Na3pCTCfGJEJf+4A9khKRjWRFQ0vu8Qyk7baQ5UlZCbwkg0lSIl++NQudZoFFis/T6Lujg3p7+9SIoEJQXFi07WkRaDcHWmsufS6Rd/CCeIGPI8/JW8CtdKs/8kCxnW6ipzl3nK8RohbOYYAtzfEkTY/AxaHHAd9dcclp8ffQSMvLj0SxANMBB5vIIeM+XtFwnkUz7u6IfWv6SqgeSLIMO+iQ1pdf5Rl+cHc28fY2rXfw/AQHaSY5nvZrg11RnqAJj69mjVLty1wwotqnNkQEVsXlYh64YzPbcMk+NGagoICDbm+vzuDht8Xn9skTHjRece6dOf0/QGHoMGK9ttLh+bOZJTK+bXBFP8e4jjxzkQvgTCHKbJXXPt1WOeeKVGnHvFchvH6TIkqQwrTaNaPpmPhM6uqear6cKBJhxY/Laq5tQX6DB2ypQDvFS0z4PFOJTTPJ9dyvMRa2wNzjPk9EFC9+huex0rP9u2j/8a4DJOqH9pvI3Ciu0Cexk3kOJaess64kUft8ULzIPpunKyM1D4KhfbvxwwiPx4aMqxwNwLFX8CEG4Lsx1YMqkJAqb42+MNXnU0gb/xJRAZP6rrUQ== maratoid+samsungjenkins@gmail.com
  etcd2:
    name: etcd
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    initial-cluster: etcd=http://$private_ipv4:2380
    initial-advertise-peer-urls: http://$private_ipv4:2380
    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001
    advertise-client-urls: http://$private_ipv4:2379,http://$private_ipv4:4001
    initial-cluster-state: new
  fleet:
    etcd-servers: http://0.0.0.0:4001
    public-ip: $private_ipv4
    metadata: "role=etcd"
  units:
    - name: wait4etcdproxy.service
      command: start
      content: |
        [Unit]
        Description=etcd wait4etcdproxy
        Wants=etcd2.service
        After=etcd2.service
        Before=fleet.service

        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/wait4etcdproxy.sh
        ExecStart=/usr/bin/bash /opt/bin/wait4etcdproxy.sh
        RemainAfterExit=true
        Type=oneshot
    - name: docker-cache.service
      command: start
      content: |
        [Unit]
        Description=Docker cache proxy
        Requires=early-docker.service
        After=early-docker.service
        Before=early-docker.target
        [Service]
        Environment="TMPDIR=/var/tmp/"
        Environment="DOCKER_HOST=unix:///var/run/early-docker.sock"
        ExecStartPre=-/usr/bin/docker kill docker-registry
        ExecStartPre=-/usr/bin/docker rm docker-registry
        ExecStartPre=/usr/bin/docker pull quay.io/devops/docker-registry:latest
        # GUNICORN_OPTS is an workaround for
        # https://github.com/docker/docker-registry/issues/892
        ExecStart=/usr/bin/docker run --rm --net host --name docker-registry \
            -e STANDALONE=false \
            -e GUNICORN_OPTS=[--preload] \
            -e MIRROR_SOURCE=https://registry-1.docker.io \
            -e MIRROR_SOURCE_INDEX=https://index.docker.io \
            -e MIRROR_TAGS_CACHE_TTL=1800 \
            quay.io/devops/docker-registry:latest
        Restart=always
        TimeoutStartSec=0
        RestartSec=5
    - name: fleet.service
      command: start
  update:
    group: alpha
    reboot-strategy: $REBOOT_STRATEGY